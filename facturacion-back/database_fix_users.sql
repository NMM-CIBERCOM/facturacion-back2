-- Script para verificar y corregir usuarios existentes
-- Ejecutar en Oracle Database

-- 1. Verificar usuarios existentes y sus estados
SELECT 'USUARIOS EXISTENTES Y SUS ESTADOS' AS DIAGNOSTICO FROM DUAL;
SELECT 
    u.NO_USUARIO,
    u.NOMBRE_EMPLEADO,
    u.ESTATUS_USUARIO,
    u.ID_PERFIL,
    p.NOMBRE_PERFIL,
    CASE 
        WHEN u.USER_ROLE IS NULL THEN 'SIN ROL'
        ELSE u.USER_ROLE
    END AS ROL_ACTUAL,
    CASE 
        WHEN u.PASSWORD_ENCODED IS NULL THEN 'SIN CODIFICAR'
        ELSE u.PASSWORD_ENCODED
    END AS ESTADO_CONTRASEÑA,
    CASE 
        WHEN ups.PAYMENT_STATUS IS NULL THEN 'SIN ESTADO'
        ELSE ups.PAYMENT_STATUS
    END AS ESTADO_PAGO
FROM USUARIOS u
LEFT JOIN PERFIL p ON u.ID_PERFIL = p.ID_PERFIL
LEFT JOIN USER_PAYMENT_STATUS ups ON u.NO_USUARIO = ups.NO_USUARIO
ORDER BY u.NO_USUARIO;

-- 2. Actualizar usuarios existentes con valores por defecto
UPDATE USUARIOS 
SET USER_ROLE = 'USER',
    PASSWORD_ENCODED = 'N',
    TWO_FACTOR_ENABLED = 'N'
WHERE USER_ROLE IS NULL 
   OR PASSWORD_ENCODED IS NULL 
   OR TWO_FACTOR_ENABLED IS NULL;

COMMIT;

-- 3. Crear estados de pago para usuarios que no los tienen
INSERT INTO USER_PAYMENT_STATUS (NO_USUARIO, PAYMENT_STATUS, CREATED_AT, UPDATED_AT, UPDATED_BY)
SELECT 
    u.NO_USUARIO,
    CASE 
        WHEN u.NO_USUARIO = 'SUPERADMIN' THEN 'PAID'
        ELSE 'PAID'  -- Por defecto, permitir acceso
    END as PAYMENT_STATUS,
    SYSDATE,
    SYSDATE,
    'SYSTEM'
FROM USUARIOS u
WHERE u.ESTATUS_USUARIO = 'A'
AND NOT EXISTS (
    SELECT 1 FROM USER_PAYMENT_STATUS ups 
    WHERE ups.NO_USUARIO = u.NO_USUARIO
);

COMMIT;

-- 4. Verificar que el Super Admin tenga el rol correcto
UPDATE USUARIOS 
SET USER_ROLE = 'SUPER_ADMIN'
WHERE NO_USUARIO = 'SUPERADMIN';

COMMIT;

-- 5. Verificar estado final
SELECT 'ESTADO FINAL DESPUÉS DE CORRECCIONES' AS DIAGNOSTICO FROM DUAL;
SELECT 
    u.NO_USUARIO,
    u.NOMBRE_EMPLEADO,
    u.ESTATUS_USUARIO,
    u.USER_ROLE,
    u.PASSWORD_ENCODED,
    ups.PAYMENT_STATUS,
    FN_USER_HAS_ACCESS(u.NO_USUARIO) AS TIENE_ACCESO
FROM USUARIOS u
LEFT JOIN USER_PAYMENT_STATUS ups ON u.NO_USUARIO = ups.NO_USUARIO
WHERE u.ESTATUS_USUARIO = 'A'
ORDER BY u.NO_USUARIO;

-- 6. Probar acceso con diferentes usuarios
SELECT 'PRUEBA DE ACCESO' AS DIAGNOSTICO FROM DUAL;
SELECT 
    'SUPERADMIN' AS USUARIO,
    FN_USER_HAS_ACCESS('SUPERADMIN') AS TIENE_ACCESO
FROM DUAL
UNION ALL
SELECT 
    NO_USUARIO,
    FN_USER_HAS_ACCESS(NO_USUARIO) AS TIENE_ACCESO
FROM USUARIOS
WHERE ESTATUS_USUARIO = 'A'
AND NO_USUARIO != 'SUPERADMIN'
AND ROWNUM <= 5;

-- Script completado
SELECT 'CORRECCIONES APLICADAS EXITOSAMENTE' AS RESULTADO FROM DUAL;
